# Copyright Â© 2021 Jeremy Carter <jeremy@jeremycarter.ca>
#
# By using this software, you agree to the LICENSE TERMS
# outlined in the file titled LICENSE.md contained in the
# top-level directory of this project. If you don't agree
# to the LICENSE TERMS, you aren't allowed to use this
# software.

# The GitLab CI/CD pipeline configuration lives in this
# file.

image: "rust:latest"

# NOTE: Install some compilers and build tools if necessary.
# You may need this if your project depends on C code.
# before_script:
#   - apt-get update
#   - apt-get install -y build-essential

# These are the GitLab CI/CD pipeline stages we want to run.
stages:
  # - test
  # - docs
  - debug-linux-x86_64
  - debug-windows-x86_64
  - release-linux-x86_64
  - release-windows-x86_64
  # - deploy

# Pipeline "debug-linux-x86_64" stage - Use cargo to build the Linux x86_64 debug binary for this project.
debug-linux-x86_64:
  stage: debug-linux-x86_64
  timeout: 3h
  needs: # Wait for a previous stage to finish before running this stage.
    []
  # "test",
  script:
    - sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y && sudo apt-get autoremove -y # Install OS updates.
    - rustc --version && cargo --version # Display rustc and cargo versions.
    - RUST_BACKTRACE=full cargo build --verbose
    - mkdir -p get-buildable-recipe
    - cp target/debug/main get-buildable-recipe/get-buildable-recipe
    - cp get-recipe.sh get-buildable-recipe/
    - chmod 755 get-buildable-recipe/get-buildable-recipe
  artifacts:
    name: get-buildable-recipe-debug-linux-x86_64
    # expire_in: never  # Keep this stage's output artifacts forever.
    paths: # The files found at these paths will be added to the artifacts archive for this pipeline stage.
      - get-buildable-recipe

# Pipeline "release-linux-x86_64" stage - Use cargo to build the Linux x86_64 release binary for this project.
release-linux-x86_64:
  stage: release-linux-x86_64
  timeout: 3h
  needs: # Wait for a previous stage to finish before running this stage.
    []
  # "test",
  script:
    - sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y && sudo apt-get autoremove -y # Install OS updates.
    - rustc --version && cargo --version # Display rustc and cargo versions.
    - RUST_BACKTRACE=full cargo build --release --verbose
    - mkdir -p get-buildable-recipe
    - cp target/release/main get-buildable-recipe/get-buildable-recipe
    - cp get-recipe.sh get-buildable-recipe/
    - strip -s get-buildable-recipe/get-buildable-recipe
    - chmod 755 get-buildable-recipe/get-buildable-recipe
  artifacts:
    name: get-buildable-recipe-release-linux-x86_64
    # expire_in: never  # Keep this stage's output artifacts forever.
    paths: # The files found at these paths will be added to the artifacts archive for this pipeline stage.
      - get-buildable-recipe
# pages:
#   stage: deploy
#   script:
#     - echo 'Nothing to do...'
#   artifacts:
#     paths:
#       - public
#     expire_in: 1 day
#   only:
#     - master
